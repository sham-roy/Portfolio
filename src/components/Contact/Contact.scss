// src/components/Contact/Contact.scss
@import '../../app/globals.scss'; // Ensure this path is correct

.contact-section-two-col-refined {
  // We can keep this main class name or rename it, e.g., .contact-section-form-focused
  background-color: $background-off-white; // Or your standard section background
  padding: 50px 0 60px;

  .section-header-contact {
    text-align: center;
    margin-bottom: 30px; // Reduced margin as the form panel will have its own top margin/padding

    h2 {
      font-size: 2rem;
      color: $primary-blue-dark;
      margin-bottom: 10px;
    }

    .contact-intro-text {
      font-size: 1rem;
      color: $text-color-medium;
      line-height: 1.6;
      // max-width: 600px;
      // margin: 0 auto;
      text-align: left;
    }
  }

  .contact-content-grid {
    // This div now only contains the contact-form-panel-main.
    // We'll use it to center the form panel.
    display: flex; // Use flex to easily center its single child
    justify-content: center; // Center the form panel horizontally
    align-items: flex-start; // Align to top if there were multiple items
  }

  .contact-form-panel-main {
    background-color: $background-white;
    padding: 30px 35px; // Generous padding inside the panel
    border-radius: $border-radius-medium; // e.g., 8px or 12px for a softer look
    box-shadow: $box-shadow-soft; // e.g., 0 5px 20px rgba(0,0,0,0.08);
    width: 100%; // Panel takes full width of its parent grid cell
    max-width: 700px; // But constrain its max width for readability
    // height: 100%; // Not needed if it's the only item and grid aligns to start
  }

  .panel-title {
    // "Send a Message"
    font-size: 1.4rem;
    color: $primary-blue;
    margin-top: 0;
    margin-bottom: 25px;
    padding-bottom: 10px;
    border-bottom: 1px solid $primary-blue-xtra-light;
    font-weight: 600;
    text-align: left; // Or center if you prefer title centered above form
  }

  // --- Contact Form Styling (largely the same as before) ---
  .main-contact-form {
    display: flex;
    flex-direction: column;
    gap: 18px;
  }

  .form-row-contact {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); // Adjust min for form inputs
    gap: 18px;
  }

  .form-group-contact {
    display: flex;
    flex-direction: column;

    label {
      display: flex;
      align-items: center;
      gap: 8px;
      margin-bottom: 6px;
      font-size: 0.85rem;
      color: $text-color-dark;
      font-weight: 500;

      svg {
        color: $primary-blue;
        font-size: 1em;
      }
    }

    input[type="text"],
    input[type="email"],
    textarea {
      padding: 10px 12px;
      border: 1px solid $border-color;
      border-radius: $border-radius-small; // Use your global var
      font-size: 0.9rem;
      font-family: $font-primary;
      background-color: $background-white;

      &::placeholder {
        color: $text-color-light;
        opacity: 0.9;
      }

      &:focus {
        outline: none;
        border-color: $primary-blue;
        box-shadow: 0 0 0 2.5px rgba($primary-blue, 0.18);
      }
    }

    textarea {
      resize: vertical;
      min-height: 100px;
    }
  }

  // In your Contact.scss or global styles if this button style is reused

  .btn-submit-contact {
    background-color: $primary-blue;
    color: $text-on-blue-bg;
    border: none;
    padding: 12px 25px; // Slightly more padding for a better feel
    font-size: 1rem; // Slightly larger font for better presence
    font-weight: 600;
    border-radius: $border-radius-medium; // Softer, more modern radius (e.g., 8px)
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 10px; // Increased gap between icon and text
    align-self: center; // Center the button within the form
    min-width: 200px; // Good minimum width
    position: relative; // Needed for pseudo-elements if used for advanced hover
    overflow: hidden; // For effects like ripples or shine that stay within bounds
    box-shadow: 0 3px 6px rgba($primary-blue-dark, 0.18); // Slightly stronger base shadow
    // More complex transition for multiple properties and icon
    transition:
      background-color 0.25s ease-out,
      transform 0.15s ease-out,
      box-shadow 0.25s ease-out,
      color 0.25s ease-out; // Added color transition

    svg {
      font-size: 1.1em;
      transition: transform 0.25s ease-out; // Add transition to the icon
    }

    &:hover {
      background-color: darken($primary-blue, 8%); // Darken a bit more on hover
      box-shadow: 0 5px 12px rgba($primary-blue-dark, 0.25); // More pronounced shadow
      transform: translateY(-2px); // Slightly more lift

      svg {
        transform: translateX(3px) scale(1.1); // Icon moves slightly right and scales up
        // Or a slight rotation:
        // transform: rotate(10deg) scale(1.1);
      }
    }

    &:active {
      transform: translateY(0px) scale(0.97); // Press down effect
      box-shadow: 0 2px 5px rgba($primary-blue-dark, 0.2);
      background-color: darken($primary-blue, 12%); // Even darker when active
    }

    // --- Optional: Advanced Hover Effect - Shine/Gloss ---
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 5px;
      height: 5px;
      background: rgba(255, 255, 255, 0.5);
      opacity: 0;
      border-radius: 100%;
      transform: scale(1, 1) translate(-50%, -50%);
      transform-origin: 50% 50%;
    }

    &:hover::after {
      animation: ripple 0.8s ease-out forwards;
    }
  }

  // Optional: Keyframes for ripple/shine effect
  @keyframes ripple {
    0% {
      transform: scale(0, 0) translate(-50%, -50%);
      opacity: 1;
    }
    100% {
      transform: scale(30, 30) translate(-50%, -50%); // Adjust scale for button size
      opacity: 0;
    }
  }

  // --- Optional: Subtle continuous animation for the icon ---
  .btn-submit-contact svg {
    animation: subtle-plane-bob 2s ease-in-out infinite alternate;
  }

  @keyframes subtle-plane-bob {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-2px);
    }
    100% {
      transform: translateY(0px);
    }
  }
}